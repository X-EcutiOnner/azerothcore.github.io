name: Update Repository Catalogue Data

on:
  schedule:
    - cron: '*/30 * * * *'  # Every 30 minutes
  workflow_dispatch:  # Allow manual trigger
    inputs:
      organizations:
        description: 'Organizations to fetch (JSON array)'
        required: false
        default: '["azerothcore"]'
      topics:
        description: 'Topics mapping (JSON object)'
        required: false
        default: '{"azerothcore": ["azerothcore-module", "azerothcore-module+ac-premium", "azerothcore-tools", "azerothcore-lua", "azerothcore-sql"]}'
      global-search:
        description: 'Search globally across GitHub (true) or restrict to organizations (false)'
        required: false
        default: 'true'

permissions:
  contents: read
  pages: write      # to deploy to Pages
  id-token: write   # to verify the deployment originates from an appropriate source

jobs:
  update-catalogue:
    runs-on: ubuntu-latest
    concurrency:
      group: catalogue-update
      cancel-in-progress: true
    steps:
      - name: Checkout azerothcore.github.io
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Full history so we can rebase before pushing

      - name: Set default values
        id: defaults
        run: |
          ORGS='${{ github.event.inputs.organizations }}'
          TOPICS='${{ github.event.inputs.topics }}'
          GLOBAL_SEARCH='${{ github.event.inputs.global-search }}'
          
          if [ -z "$ORGS" ]; then
            ORGS='["azerothcore"]'
          fi
          
          if [ -z "$TOPICS" ]; then
            TOPICS='{"azerothcore": ["azerothcore-module", "azerothcore-module+ac-premium", "azerothcore-tools", "azerothcore-lua", "azerothcore-sql"]}'
          fi
          
          if [ -z "$GLOBAL_SEARCH" ]; then
            GLOBAL_SEARCH='true'
          fi
          
          echo "organizations=$ORGS" >> $GITHUB_OUTPUT
          echo "topics=$TOPICS" >> $GITHUB_OUTPUT
          echo "global-search=$GLOBAL_SEARCH" >> $GITHUB_OUTPUT

      - name: Fetch Repository Catalogue Data
        id: fetch-repos
        uses: azerothcore/git-catalogue/.github/actions/fetch-repositories@master
        with:
          organizations: ${{ steps.defaults.outputs.organizations }}
          topics: ${{ steps.defaults.outputs.topics }}
          global-search: ${{ steps.defaults.outputs.global-search }}
          output-path: 'data/catalogue.json'
          per-page: '100'
          max-retries: '3'
          rate-limit-delay: '2'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create data directory if it doesn't exist
        run: mkdir -p data

      - name: Verify generated file
        run: |
          if [ -f "data/catalogue.json" ]; then
            echo "✅ Catalogue file generated successfully"
            echo "File size: $(du -h data/catalogue.json | cut -f1)"
            echo "Total repositories: ${{ steps.fetch-repos.outputs.total-repos }}"
            
            # Validate JSON structure and content
            if ! jq empty data/catalogue.json; then
              echo "❌ Generated JSON is invalid"
              exit 1
            fi
            
            # Check if we have any repositories
            repo_count=$(jq '[.organizations[] | to_entries[] | .value | length] | add' data/catalogue.json)
            if [ "$repo_count" -eq 0 ]; then
              echo "⚠️  Warning: No repositories found in catalogue"
              echo "This might indicate a configuration issue or lack of repositories with the specified topics"
            fi
          else
            echo "❌ Catalogue file was not generated"
            exit 1
          fi

      # Build and deploy the entire site via GitHub Pages so
      # the generated JSON is published without committing it.
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Setup Ruby for Jekyll
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
        env:
          BUNDLE_GEMFILE: .env-files/Gemfile.github

      - name: Install Jekyll dependencies
        run: bundle install --jobs 4 --retry 3
        env:
          BUNDLE_GEMFILE: .env-files/Gemfile.github

      - name: Build site with Jekyll
        run: bundle exec jekyll build --trace
        env:
          BUNDLE_GEMFILE: .env-files/Gemfile.github
          JEKYLL_ENV: production

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Summary
        run: |
          echo "## 📊 Catalogue Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Repositories:** ${{ steps.fetch-repos.outputs.total-repos }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Organizations:** ${{ steps.defaults.outputs.organizations }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Generated At:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "- **Published To:** ${{ steps.deployment.outputs.page_url }}data/catalogue.json" >> $GITHUB_STEP_SUMMARY
